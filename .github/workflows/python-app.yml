name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Needed to allow pushing code changes

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]  # Add or remove versions as needed

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # allow warnings for style issues
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Auto-format code with Black and push
      if: github.actor != 'github-actions[bot]' && github.ref == 'refs/heads/main' && matrix.python-version == '3.10'
      run: |
        black .
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .

        # Only commit if there are changes
        if ! git diff --cached --quiet; then
          git commit -m "Auto-format code with Black"
          # Fetch remote changes and rebase before pushing
          git fetch origin main
          git rebase origin/main
          git push origin HEAD:main
        else
          echo "No changes to commit"
        fi

    - name: Run tests with pytest
      run: |
        pytest
